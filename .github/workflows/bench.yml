name: isucon9-final bench
on: [push]
env:
  LANGUAGE: go  # CHANGEME
  BENCH_TARGET_URL: http://127.0.0.1:8080
jobs:

  build:
    name: Bench
    runs-on: ubuntu-latest
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Cache webapp/frontend
      id: cache-webapp-frontend
      uses: actions/cache@v1
      with:
        path: webapp/frontend/dist
        key: ${{ runner.os }}-webapp-frontend

    - name: Build webapp/frontend
      if: steps.cache-webapp-frontend.outputs.cache-hit != 'true'
      run: cd webapp/frontend && make

    - name: Cache bench
      id: cache-bench
      uses: actions/cache@v1
      with:
        path: bench/bin
        key: ${{ runner.os }}-bench

    - name: Set up Go 1.13
      if: steps.cache-bench.outputs.cache-hit != 'true'
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Build bench
      if: steps.cache-bench.outputs.cache-hit != 'true'
      run: cd bench && make

    - name: Build dependency
      run: docker-compose -f webapp/docker-compose.yml -f webapp/docker-compose.${LANGUAGE}.yml build

    - name: Run bench
      timeout-minutes: 10
      run: |
        docker-compose -f webapp/docker-compose.yml -f webapp/docker-compose.${LANGUAGE}.yml up -d
        sleep 10
        while ! curl -fs ${BENCH_TARGET_URL}/api/stations >/dev/null ; do
          echo -n .
          sleep 1
        done
        echo
        bench/bin/bench_linux run --target ${BENCH_TARGET_URL} --assetdir webapp/frontend/dist | \
          jq '{"body":(["item | value","--- | ---"]+(to_entries|map(.key+" | "+(.value|if type=="array" then join("<br>") else @text end)))|join("\n"))}' | \
          curl --silent \
            --request POST \
            --url https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/comments \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data @-
